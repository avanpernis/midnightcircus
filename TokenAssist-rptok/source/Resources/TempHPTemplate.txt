<!-- retrieve previously stored values -->
[H : LastTempHPAmount = getStrProp(CombatStatus, "LastTempHPAmount")]
[H : LastTempHPStacks = getStrProp(CombatStatus, "LastTempHPStacks")]

<!-- show the user healing options -->
[H : InputPrompt = input(
	"UNUSED | " + CurrentHitPoints + " / " + MaxHitPoints + if(TempHitPoints > 0, " (Temp: " + TempHitPoints + ")", "") + " | Hit Points | Label",
	"UNUSED | " + CurrentHealingSurges + " / " + MaxHealingSurges + " (Value: " + HealingSurgeValue + ") | Healing Surges | Label",
	"UNUSED | <html></html> | | LABEL | SPAN = TRUE",
	"TempHPAmount | " + LastTempHPAmount + " | Amount of Temp HP | TEXT",
	"TempHPStacks | " + LastTempHPStacks + " | Temp HP Stacks? | CHECK ",
	"UNUSED | <html></html> | | LABEL | SPAN = TRUE")]

<!-- bail if the user cancels the dialog -->
[H : abort(InputPrompt)]

<!-- Saves Choices -->
[H : PropsUsedList = "TempHPAmount, TempHPStacks"]
[H ,C(listCount(PropsUsedList)) : CombatStatus = setStrProp(CombatStatus, "Last" + listGet(PropsUsedList, roll.count), eval(listGet(PropsUsedList, roll.count)))]

<!-- if the temp hit points are not stackable, the new value is simply the maximum of the current and new values -->
[H : TempHitPoints = if(TempHPStacks == 1, TempHitPoints + TempHPAmount, max(TempHitPoints, TempHPAmount))]

<!-- format the output -->
[H : Results = 
	if(TempHPStacks == 1, "You stack an additional <b>" + TempHPAmount + "</b> Temporary Hit Points!<br>", "") +
	"<b>You now have " + TempHitPoints + " Temporary Hit Points!</b>"]

<!-- update token state appropriately -->
[H : state.Helpless = if(CurrentHitPoints > 0, 0, 1)]
[H : state.Dead = 1 - max(0, min(1, (MaxHitPoints * 0.5) + CurrentHitPoints))]
[H : state.Prone = state.Dead + state.Prone + state.Helpless]
[H : state.Bloodied = if(CurrentHitPoints / MaxHitPoints < 0.5, 1, 0)]
[H : bar.Health = CurrentHitPoints / MaxHitPoints]

<!-- output the results -->
{Results}