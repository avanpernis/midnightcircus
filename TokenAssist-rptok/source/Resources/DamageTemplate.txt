<!-- retrieve previously stored values -->
[H : LastDamageAmount = getStrProp(CombatStatus, "LastDamageAmount")]
[H : LastSecretRoll = getStrProp(CombatStatus, "LastSecretRoll")]

<!-- show the user damage options -->
[H : InputPrompt = input(
	"UNUSED | " + CurrentHitPoints + " / " + MaxHitPoints + if(TempHitPoints > 0, " (Temp: " + TempHitPoints + ")", "") + " | Hit Points | Label",
	"UNUSED | " + CurrentHealingSurges + " / " + MaxHealingSurges + " (Value: " + HealingSurgeValue + ") | Healing Surges | Label",
	"UNUSED | <html></html> | | LABEL | SPAN = TRUE",
	"DamageAmount | " + LastDamageAmount + " | Amount of Damage | TEXT",
	"UNUSED | <html></html> | | LABEL | SPAN = TRUE",
	"SecretRoll | " + LastSecretRoll + " | Secret Roll? | CHECK")]

<!-- bail if the user cancels the dialog -->
[H : abort(InputPrompt)]

<!-- store the values for next time -->
[H : PropsUsedList = "DamageAmount, SecretRoll"]
[H ,C(listCount(PropsUsedList)) : CombatStatus = setStrProp(CombatStatus, "Last" + listGet(PropsUsedList, roll.count), eval(listGet(PropsUsedList, roll.count)))]

<!-- first burn any temp hit points that might exist -->
[H : TempHitPoints = TempHitPoints - DamageAmount]

<!-- if the above went negative, add it to current hp (effectively a subtract) -->
[H : CurrentHitPoints = CurrentHitPoints + min(0, TempHitPoints)]

<!-- now adjust the temp hit points if they went negative -->
[H : TempHitPoints = max(0, TempHitPoints)]

<!-- format the output -->
[H : Results =
	"<b>Damaged for " + DamageAmount + " Hit Points!</b><br>" + 
	"<b>" + CurrentHitPoints + " / " + MaxHitPoints + "</b> Hit Points Remaining<br>"]

<!-- update token state appropriately -->
[H : state.Helpless = if(CurrentHitPoints > 0, 0, 1)]
[H : state.Dead = 1 - max(0, min(1, (MaxHitPoints * 0.5) + CurrentHitPoints))]
[H : state.Prone = state.Dead + state.Prone + state.Helpless]
[H : state.Bloodied = if(CurrentHitPoints / MaxHitPoints < 0.5, 1, 0)]
[H : bar.Health = CurrentHitPoints / MaxHitPoints]

<!-- output the results -->
[IF(SecretRoll == 1), CODE : {
	[dialog("Results") : { <html>[R : Results]</html> }]
	[H : abort(0)]
};{
	{Results}
}]