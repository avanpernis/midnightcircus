<!-- generic variables that were populated by TokenAssist -->
[H : InitBonus = "__INIT_BONUS__"]

<!-- retrieve previously stored values -->
[H : LastTempInitBonus = getStrProp(CombatStatus, "LastTempInitBonus")]
[H : LastSecretRoll = getStrProp(CombatStatus, "LastSecretRoll")]

[H : InputPrompt = input(
   "UNUSED | Bonus (+" + InitBonus + ") | Roll Initiative | LABEL",
   "TempInitBonus | " + LastTempInitBonus + " | Temporary bonus | TEXT",
   "UNUSED | <html></html> | | LABEL | SPAN = TRUE",
   "SecretRoll | " + LastSecretRoll + " | Secret Roll? | CHECK")]

<!-- bail if the user cancels the dialog -->
[H : abort(InputPrompt)]

<!-- store the values for next time -->
[H : PropsUsedList = "TempInitBonus, SecretRoll"]
[H, C(listCount(PropsUsedList)) : CombatStatus = setStrProp(CombatStatus, "Last" + listGet(PropsUsedList, roll.count), eval(listGet(PropsUsedList, roll.count)))]

<!-- get the values from the user input -->
[H : InitBonus = InitBonus + TempInitBonus]
[H : InitBonusPrefix = if(eval("" + InitBonus) < 0, "", "+")]

<!-- make the roll -->
[H : InitRoll = 1d20]

<!-- twenty detection -->
[H : Twenty = if(InitRoll == 20, 1, 0)]

<!-- adjust the roll -->
[H : InitResult = InitRoll + InitBonus]

<!-- red text if twenty, black otherwise -->
[H : InitResultColor = if(Twenty == 1, "red", "black")]
[H : Results = "<b>Roll Initiative</b> (" + InitBonusPrefix + InitBonus + "): <b><span style='color:" + InitResultColor + "'>" + InitResult + "</span></b>"]

<!-- show the roll results -->
[IF(SecretRoll == 1), CODE : {
	[dialog("Results") : { <html>[R : Results]</html> }]
	[H : abort(0)]
};{
	{Results}
}]

<!-- add this token to the initiative panel -->
[H : addToInitiative()]
[H : setInitiative(InitResult)]
[H : sortInitiative()]
