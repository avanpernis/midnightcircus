<!-- generic variables that were populated by TokenAssist -->
[H : SaveBonus = "__SAVE_BONUS__"]

<!-- retrieve previously stored values -->
[H : LastTempSaveBonus = getStrProp(CombatStatus, "LastTempSaveBonus")]
[H : LastSecretRoll = getStrProp(CombatStatus, "LastSecretRoll")]

[H : InputPrompt = input(
   "UNUSED | Bonus (+" + SaveBonus + ") | Saving Throw | LABEL",
   "TempSaveBonus | " + LastTempSaveBonus + " | Temporary bonus | TEXT",
   "SecretRoll | " + LastSecretRoll + " | Secret Roll? | CHECK")]

<!-- bail if the user cancels the dialog -->
[H : abort(InputPrompt)]

<!-- store the values for next time -->
[H : PropsUsedList = "TempSaveBonus, SecretRoll"]
[H, C(listCount(PropsUsedList)) : CombatStatus = setStrProp(CombatStatus, "Last" + listGet(PropsUsedList, roll.count), eval(listGet(PropsUsedList, roll.count)))]

<!-- get the values from the user input -->
[H : SaveBonus = SaveBonus + TempSaveBonus]
[H : SaveBonusPrefix = if(eval("" + SaveBonus) < 0, "", "+")]

<!-- make the save -->
[H : SaveRoll = 1d20]

<!-- twenty detection -->
[H : Twenty = if(SaveRoll == 20, 1, 0)]

<!-- adjust the save -->
[H : SaveResult = SaveRoll + SaveBonus]

<!-- red text if twenty, black otherwise -->
[H : SaveResultColor = if(Twenty == 1, "red", "black")]
[H : Results = "<b>Saving Throw</b> (" + SaveBonusPrefix + SaveBonus + "): <b><span style='color:" + SaveResultColor + "'>" + SaveResult + "</span></b>"]

<!-- show the save results -->
[IF(SecretRoll == 1), CODE : {
	[dialog("Results") : { <html>[R : Results]</html> }]
	[H : abort(0)]
};{
	{Results}
}]
